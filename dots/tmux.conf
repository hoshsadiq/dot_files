# todo $HOME/dot_files needs to be dynamic
# source-file "$HOME/dot_files/third-party/tmux-gitbar/tmux-gitbar.tmux"


# -- general -------------------------------------------------------------------

set-option -g default-shell ${SHELL}
set -g default-terminal "screen-256color"
set -gw xterm-keys on
set -s escape-time 1                      # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g history-limit 100000                 # boost history

setw -qg utf8 on

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf reloaded'

# notifications
setw -g monitor-activity on      # Activity Alerts
set -g visual-activity on

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time


setw @git-status-prefix "#{?pane_active,#[fg=#adadad],}├┤ "

# -- theme ---------------------------------------------------------------------

# Window list color
set -w pane-border-status top
set -g pane-border-fg "#3d3d3d"      # Pane colors
set -g pane-border-bg "#0f0f0f"
set -g pane-active-border-fg "#dddddd"
set -g pane-active-border-bg default
set -g pane-border-format '┤ #[fg=default]#{?pane_active,#[fg=#adadad] ,}#[fg=#757575]#{tmux-curdir "#P"} #{tmux-git-status "#P"} #[fg=default]├'

# status bar
set -g status on
set -g status-justify left
set -g status-interval 1
set -g status-style "none,bg=#262626"

set -g status-left-length 100
set -g status-left "#{?client_prefix,#[fg=#e4e4e4]#[bg=red],#[fg=colour232]#[bg=#c4c4c4]} #{tmux-os-icon} #[bold] #{session_name} "


# ♪ #(exec amixer get Master | egrep -o '[0-9]+%' | egrep -o '[0-9]*')
set -g status-right-length 100
set -g status-right " #[fg=#9e9e9e,bg=#262626,bold]  #{USER}@#{host_short} #[fg=colour255,bg=colour232,bold] #{session_attached} #[fg=black,bg=white] %H:%M:%S#{tmux-online-status} "

# window status
setw -g window-status-activity-style "fg=#9e9e9e,bg=#262626"
setw -g window-status-format " #{?window_activity_flag, ,}#I[#W]#{?window_zoomed_flag,缾, }#{?pane_synchronized,罹,}#{?#{||,#{window_zoomed_flag},#{pane_synchronized}}, ,}"
setw -g window-status-current-format "#[fg=#9e9e9e,bg=colour233] #I[#W]#{?window_zoomed_flag,缾, }#{?pane_synchronized,罹,}#{?#{||,#{window_zoomed_flag},#{pane_synchronized}}, ,}"

# ----

# unbind items
unbind -n C-l
unbind %
unbind '"'

# Hide status-bar when only one window, however, we have a client_prefix indicator.
# set-hook window-linked "if-shell -F '#{!=:#{session_windows},1}' 'set status on'"
# set-hook window-unlinked "if-shell -F '#{==:#{session_windows},1}' 'set status off'"


# vi keys to move
setw -g mode-keys vi

# -- Pane and layout

# Numbering of windows/panes
set -g base-index 1
setw -g pane-base-index 1  # Numbering of Panes

# set navigation optoins
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# pane navigation
bind -r > swap-pane -D       # swap current pane with the next one
bind -r < swap-pane -U # swap current pane with the previous one

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Window navigation
bind C-b last-window
bind -n C-p previous-window
bind -n C-n next-window

# pane resizing
bind -n C-M-Left resize-pane -L 2
bind -n C-M-Down resize-pane -D 2
bind -n C-M-Up resize-pane -U 2
bind -n C-M-Right resize-pane -R 2

# Zoom the current pane
unbind x
bind x resize-pane -Z

bind M command-prompt -p "Manpage:" "neww 'MANWIDTH=80 TERM=screen-256color man %%'"
bind m command-prompt -p "Manpage:" "split-window -h 'MANWIDTH=80 TERM=screen-256color man %%'"

# mouse mode
set -g mouse on
# set -g mouse-select-pane on
set -g set-clipboard external
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
bind C-m set-option -g mouse on \; display 'Mouse: ON'
bind C-M set-option -g mouse off \; display 'Mouse: OFF'

# bind Enter copy-mode # enter copy mode
#
# bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi C-v send -X rectangle-toggle
# bind -T copy-mode-vi y send -X copy-selection-and-cancel
# bind -T copy-mode-vi Escape send -X cancel
# bind -T copy-mode-vi H send -X start-of-line
# bind -T copy-mode-vi L send -X end-of-line
#
# # copy to macOS clipboard
# if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
# if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# # copy to X11 clipboard
# if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
# if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# # copy to Windows clipboard
# if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
# if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

bind P pipe-pane -o "mkdir -p ~/tmp/; cat >>~/tmp/tmux-#W.log" \; display "Toggled logging to ~/tmp/tmux-#W.log"

run-shell ~/dot_files/tmux/plugins.tmux
